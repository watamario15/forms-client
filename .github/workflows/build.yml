name: Build

on:
  push:
    tags: '*'
  workflow_dispatch:

jobs:
  github_pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      
      - name: Flutter Pub Get
        run: flutter pub get

      - name: Flutter Build
        run: flutter build web --web-renderer html --base-href /`echo ${{ github.repository }} | sed -e "s#.*/##"`/

      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web
          
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }} # Supplied by actions/create-release
    steps:
      - uses: actions/checkout@v3

      - name: Generate Release Name
        id: release_name
        run: echo ::set-output name=name::${GITHUB_REF/refs\/*s\//}

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_name.outputs.name }}
          release_name: ${{ steps.release_name.outputs.name }}
          body: |-
            The purpose of this project is to evaluate the pair-programming. **NOT FOR A PRACTICAL USE.**
            - The Windows release requires the [64-bit Visual C++ redistributable for Visual Studio 2022](https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads) to be installed.
            - The Linux release may require some additional dependencies. `ldd` command will teach you what are needed.
            - For Android devices, download the .apk file and install it with "Allow installation of apps from unknown sources on Android" enabled.
            - For web, visit the [deployment](https://watamario15.github.io/formsclient/) or the [`gh-pages` branch](https://github.com/watamario15/formsclient/tree/gh-pages).
            - The macOS and the iOS release are experimental and not notarized. We don't even know whether they work or not.
          prerelease: true

  windows:
    name: Release Windows Exectable
    needs: [create_release]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Flutter Pub Get
        run: flutter pub get

      - name: Flutter Build
        run: flutter build windows
      
      - name: Setup Releases
        run: compress-archive build/windows/runner/Release/ release.zip

      - name: Generate Archive Name
        id: archive_name
        run: echo "::set-output name=name::windows-$($ENV:GITHUB_REF -replace 'refs/.*s/', '')"

      - name: Upload release.zip
        uses: actions/upload-release-asset@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: release.zip
          asset_name: ${{ steps.archive_name.outputs.name }}.zip
          asset_content_type: application/zip

  macos:
    name: Release macOS Exectable
    needs: [create_release]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Flutter Pub Get
        run: flutter pub get

      - name: Flutter Build
        run: flutter build macos
      
      - name: Setup Releases
        run: cd build/macos/Build/Products/Release && 7z a -tzip -y release.zip `echo ${{ github.repository }} | sed -e "s#.*/##"`.app

      - name: Generate Archive Name
        id: archive_name
        run: echo ::set-output name=name::macos-${GITHUB_REF/refs\/*s\//}

      - name: Upload .app
        uses: actions/upload-release-asset@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: build/macos/Build/Products/Release/release.zip
          asset_name: ${{ steps.archive_name.outputs.name }}.app.zip
          asset_content_type: application/zip

  linux:
    name: Release Linux Exectable
    needs: [create_release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - run: |
          sudo apt update -y
          sudo apt install -y ninja-build libgtk-3-dev
          flutter --version

      - name: Flutter Pub Get
        run: flutter pub get

      - name: Flutter Build
        run: flutter build linux
      
      - name: Setup Releases
        run: cd build/linux/x64/release && tar -zcvf release.tar.gz bundle

      - name: Generate Archive Name
        id: archive_name
        run: echo ::set-output name=name::linux-${GITHUB_REF/refs\/*s\//}

      - name: Upload release.tar.gz
        uses: actions/upload-release-asset@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: build/linux/x64/release/release.tar.gz
          asset_name: ${{ steps.archive_name.outputs.name }}.tar.gz
          asset_content_type: application/gzip

  android:
    name: Release Android Exectable
    needs: [create_release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Flutter Pub Get
        run: flutter pub get

      - name: Flutter Build
        run: |
          flutter build apk
          flutter build appbundle

      - name: Generate Archive Name
        id: archive_name
        run: echo ::set-output name=name::android-${GITHUB_REF/refs\/*s\//}

      - name: Upload APK
        uses: actions/upload-release-asset@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/apk/release/app-release.apk
          asset_name: ${{ steps.archive_name.outputs.name }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload App Bundle
        uses: actions/upload-release-asset@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/bundle/release/app-release.aab
          asset_name: ${{ steps.archive_name.outputs.name }}.aab
          asset_content_type: application/x-authorware-bin

  ios:
    name: Release iOS Exectable
    needs: [create_release]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Flutter Pub Get
        run: flutter pub get

      - name: Flutter Build
        run: flutter build ios --no-codesign
      
      - name: Setup Releases
        run: |
          mkdir Payload
          mv build/ios/iphoneos/Runner.app Payload/
          7z a -tzip -y release.zip Payload

      - name: Generate Archive Name
        id: archive_name
        run: echo ::set-output name=name::ios-${GITHUB_REF/refs\/*s\//}

      - name: Upload .ipa
        uses: actions/upload-release-asset@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: release.zip
          asset_name: ${{ steps.archive_name.outputs.name }}.ipa
          asset_content_type: application/octet-stream
